FROM elevy/slim_java:8

ARG FLINK_VERSION
ARG HADOOP_VERSION=27
ARG SCALA_VERSION=2.11
ARG HADOOP_AWS_VERSION=2.7.4
ARG AWS_SDK_VERSION=1.7.4
ARG APACHE_HTTP_VERSION=4.2.5
ARG CONFD_VERSION=0.13.0

ARG FLINK_URL_FILE_PATH=flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-hadoop${HADOOP_VERSION}-scala_${SCALA_VERSION}.tgz

ENV PATH="/opt/flink/bin:$PATH"

RUN apk add --no-cache --virtual .build-deps \
      ca-certificates   \
      gnupg             \
      tar               \
      wget &&           \
    #
    # Install dependencies
    apk add --no-cache  \
      bash              \
      libstdc++ &&      \
    #
    # Download Flink
    wget -nv -O /tmp/flink.tgz "https://www.apache.org/dyn/closer.cgi?action=download&filename=${FLINK_URL_FILE_PATH}" && \
    wget -nv -O /tmp/flink.tgz.asc "https://www.apache.org/dist/${FLINK_URL_FILE_PATH}.asc" && \
    wget -nv -O /tmp/KEYS https://dist.apache.org/repos/dist/release/flink/KEYS && \
    #
    # Verify the signature
    export GNUPGHOME="$(mktemp -d)" && \
    gpg -q --batch --import /tmp/KEYS && \
    gpg -q --batch --no-auto-key-retrieve --verify /tmp/flink.tgz.asc /tmp/flink.tgz && \
    #
    # Install
    mkdir -p /opt/flink && \
    cd /opt/flink && \
    tar --no-same-owner -xf /tmp/flink.tgz --strip-components=1 && \
    #
    # Install Datadog jar for metric reporting
    mv opt/flink-metrics-datadog* lib/ && \
    #
    # Install dependencies needed to access S3 for checkpoints/savepoints
    MAVEN_URL="http://search.maven.org/remotecontent?filepath=" && \
    wget -nv -P lib/ --content-disposition "${MAVEN_URL}org/apache/hadoop/hadoop-aws/${HADOOP_AWS_VERSION}/hadoop-aws-${HADOOP_AWS_VERSION}.jar" && \
    wget -nv -P lib/ --content-disposition "${MAVEN_URL}com/amazonaws/aws-java-sdk/${AWS_SDK_VERSION}/aws-java-sdk-${AWS_SDK_VERSION}.jar" && \
    wget -nv -P lib/ --content-disposition "${MAVEN_URL}org/apache/httpcomponents/httpcore/${APACHE_HTTP_VERSION}/httpcore-${APACHE_HTTP_VERSION}.jar" && \
    wget -nv -P lib/ --content-disposition "${MAVEN_URL}org/apache/httpcomponents/httpclient/${APACHE_HTTP_VERSION}/httpclient-${APACHE_HTTP_VERSION}.jar" && \
    #
    # Slim down
    rm -rf \
      LICENSE \
      NOTICE \
      README.txt \
      bin/*.bat \
      bin/flink-daemon.sh \
      bin/mesos-* \
      bin/start-cluster.sh \
      bin/start-local.sh \
      bin/start-zookeeper-quorum.sh \
      bin/stop-cluster.sh \
      bin/stop-local.sh \
      bin/stop-zookeeper-quorum.sh \
      bin/yarn-session.sh \
      bin/zookeeper.sh \
      conf/log4j.properties \
      conf/log4j-yarn-session.properties \
      conf/logback* \
      conf/masters \
      conf/slaves \
      conf/zoo.cfg \
      examples \
      opt \
      resources \
      tools && \
    #
    # Set up directories
    mkdir -p /data/{blob,log,tmp} && \
    #
    # Install Confd for configuration via templates
    wget -nv -O /usr/bin/confd "https://github.com/kelseyhightower/confd/releases/download/v${CONFD_VERSION}/confd-${CONFD_VERSION}-linux-amd64" && \
    chmod a+rx /usr/bin/confd && \
    #
    # These files will be generated by confd.
    rm -f \
      /opt/flink/conf/flink-conf.yaml \
      /opt/flink/conf/log4j-console.properties && \
    #
    # Clean up
    apk del .build-deps && \
    rm -rf /tmp/* "$GNUPGHOME"

COPY confd /etc/confd/
COPY entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]
CMD [ "help" ]